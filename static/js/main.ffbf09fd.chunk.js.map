{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/functions/ShuffleArray.js","js/classes/Octagon.js","audio/octagons-no-1.ogg","audio/octagons-no-1.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","ShuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Octagon","x","y","radius","colour","whiteStroke","this","p","canDraw","angleAdjuster","stroke","strokeR","strokeG","strokeB","angleMode","DEGREES","i","size","fillR","fillG","fillB","beginShape","a","sx","cos","sy","sin","vertex","endShape","CLOSE","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","tempo","barAsSeconds","colours","loadMidi","Midi","fromUrl","midi","then","result","noteSet1","tracks","notes","filter","note","noteSet2","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","ticks","time","addCue","melodicOctagons","setup","createCanvas","startingCount","background","strokeWeight","populateMelodicOctagons","draw","isPlaying","octagon","update","executeCueSet1","reducer","clear","drawOctagonGrid","executeCueSet2","octagons","oct","count","push","opacity","maxFillOpacity","RADIANS","angle","TWO_PI","mousePressed","pause","parseInt","currentTime","buffer","duration","reset","addClass","play","creditsLogged","console","log","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ffbf09fd.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","export default class Octagon {\n    constructor(p5, x, y, radius, colour, whiteStroke) {\n        this.p = p5;\n        this.x = x;\n        this.y = y;\n        this.radius = radius; \n        this.colour =colour;\n        this.whiteStroke = whiteStroke;\n        this.canDraw = false;\n        this.angleAdjuster = 0;\n    }\n\n    update() {\n        if(this.canDraw){\n            this.angleAdjuster++;\n        }\n    }\n\n    draw() {\n        if(this.canDraw){\n            this.p.stroke(\n                this.colour.strokeR,\n                this.colour.strokeG,\n                this.colour.strokeB\n            );\n            this.p.angleMode(this.p.DEGREES);\n            const angle = 360 / 8;\n            for (let i = 0; i < 4; i++) {\n                const size = this.radius - (this.radius / 4 * i)  \n                this.p.fill(this.colour.fillR, this.colour.fillG, this.colour.fillB, 64 / 4 * i);\n                this.p.beginShape();\n                for (let a = 360 / 16; a < 360 + 360 / 16; a += angle) {\n                    let sx = this.x + this.p.cos(a + this.angleAdjuster) * size;\n                    let sy = this.y + this.p.sin(a + this.angleAdjuster) * size;\n                    this.p.vertex(sx, sy);\n                }\n                this.p.endShape(this.p.CLOSE);\n            }\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/octagons-no-1.469cd261.ogg\";","export default __webpack_public_path__ + \"static/media/octagons-no-1.81c61a40.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport ShuffleArray from './functions/ShuffleArray.js';\nimport Octagon from './classes/Octagon.js';\n\nimport audio from \"../audio/octagons-no-1.ogg\";\nimport midi from \"../audio/octagons-no-1.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.tempo = 104;\n\n        p.barAsSeconds = Math.floor((60 / p.tempo) * 4 * 100000) / 100000;\n\n        p.colours = [\n        {\n            fillR: 255,\n            fillG: 255,\n            fillB: 0,\n            strokeR: 127,\n            strokeG: 127,\n            strokeB: 0,\n        },\n        {\n            fillR: 127,\n            fillG: 255,\n            fillB: 0,\n            strokeR: 63,\n            strokeG: 127,\n            strokeB: 0,\n        },\n        {\n            fillR: 255,\n            fillG: 127,\n            fillB: 0,\n            strokeR: 127,\n            strokeG: 63,\n            strokeB: 0,\n        },\n        {\n            fillR: 255,\n            fillG: 0,\n            fillB: 255,\n            strokeR: 127,\n            strokeG: 0,\n            strokeB: 127,\n        },\n        {\n            fillR: 127,\n            fillG: 0,\n            fillB: 255,\n            strokeR: 63,\n            strokeG: 0,\n            strokeB: 127,\n        },\n        {\n            fillR: 255,\n            fillG: 0,\n            fillB: 127,\n            strokeR: 127,\n            strokeG: 0,\n            strokeB: 63,\n        },\n        {\n            fillR: 0,\n            fillG: 255,\n            fillB: 255,\n            strokeR: 0,\n            strokeG: 127,\n            strokeB: 127,\n        },\n        {\n            fillR: 0,\n            fillG: 127,\n            fillB: 255,\n            strokeR: 0,\n            strokeG: 63,\n            strokeB: 127,\n        },\n        {\n            fillR: 0,\n            fillG: 255,\n            fillB: 127,\n            strokeR: 0,\n            strokeG: 127,\n            strokeB: 63,\n        },\n        ];\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    const noteSet1 = result.tracks[2].notes.filter(note => note.midi !== 43); // Redrum 1 - RnB Kit 04\n                    const noteSet2 = result.tracks[4].notes; // Synth 3 - Eject\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.melodicOctagons = [];\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.startingCount = Math.floor(Math.random() * 8) + 1;\n            p.background(0, 0, 0, 0);\n            p.strokeWeight(p.width / 2048);\n            p.populateMelodicOctagons();\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                for (let i = 0; i < p.melodicOctagons.length; i++) {\n                    const octagon = p.melodicOctagons[i];\n                    octagon.draw();\n                    octagon.update();\n                }\n            }\n        }\n\n        p.executeCueSet1 = (note) => {\n            const { currentCue, ticks } = note, \n                reducer = 6 - (ticks % 61440) / 7680;\n            if(currentCue < 105) {\n                if(currentCue % 8 === 0){\n                    p.startingCount = Math.floor(Math.random() * 8) + 1;\n                    if(currentCue >= 78){\n                        p.clear();\n                        p.background(0);\n                    }\n                }\n                if (currentCue >= 104) {\n                    p.strokeWeight(p.width / 1024);\n                }\n                else if (currentCue >= 26) {\n                    p.strokeWeight(p.width / 768);\n                } \n                let size = currentCue <= 52 ? p.width / 16 : p.width / 4;\n                    size = currentCue <= 104 ? size : p.width / 8;\n                p.drawOctagonGrid(reducer, size, currentCue / 2);\n            }\n        }\n\n        p.executeCueSet2 = (note) => {\n            const { currentCue } = note;\n            if(currentCue > 80) {\n                let octagons = p.melodicOctagons.filter(oct => oct.canDraw === false);\n                octagons = ShuffleArray(octagons);\n                if(octagons.length){\n                    const octagon = octagons[0];\n                    octagon.canDraw = true;\n                }\n            }\n            \n        }\n\n        p.populateMelodicOctagons = () => {\n            const size = p.width / 8,\n                radius = size/2;\n            let count = 0;\n            for (let x = 0; x <= p.width + size; x += size) {\n                for (let y = 0; y <= p.height + size; y += size) {\n                    const colour = p.colours[count];\n                    p.melodicOctagons.push(\n                        new Octagon(p, x, y, radius, colour, p.whiteStroke)\n                    );\n                    p.whiteStroke = !p.whiteStroke;\n                    count++;\n                    if (count > 8) {\n                        count = 0;\n                    }\n                }\n            }\n        }\n\n        p.whiteStroke = false;\n\n        p.drawOctagonGrid = (reducer, size, opacity) => {\n      \n            reducer = (size / 8) * reducer;\n            let radius = size;\n            let count = p.startingCount;\n            let colour = p.colours[count];\n            const maxFillOpacity = opacity < 64 ? opacity : 64;\n            if(maxFillOpacity < 32){\n                p.background(0, 0, 0, maxFillOpacity * 2);\n            }\n            for (let x = 0; x <= p.width + size; x += size) {\n                for (let y = 0; y <= p.height + size; y += size) {\n                radius = size;\n                colour = p.colours[count];\n                p.fill(colour.fillR, colour.fillG, colour.fillB, maxFillOpacity);\n                if(p.whiteStroke) {\n                    p.stroke(255, 255, 255, 127);\n                }\n                else {\n                    p.stroke(\n                        colour.strokeR,\n                        colour.strokeG,\n                        colour.strokeB\n                    );\n                }\n                p.whiteStroke = !p.whiteStroke;\n                p.octagon(x, y, radius - reducer);\n                count++;\n                    if (count > 8) {\n                        count = 0;\n                    }\n                }\n            }\n            \n        };\n\n        /*\n        * function to draw a octagon shape\n        * adapted from: https://p5js.org/examples/form-regular-polygon.html\n        * @param {Number} x        - x-coordinate of the octagon\n        * @param {Number} y      - y-coordinate of the octagon\n        * @param {Number} radius   - radius of the octagon\n        */\n        p.octagon = (x, y, radius) => {\n            radius = radius / 2;\n            p.angleMode(p.RADIANS);\n            const angle = p.TWO_PI / 8;\n            p.beginShape();\n            for (let a = p.TWO_PI / 16; a < p.TWO_PI + p.TWO_PI / 16; a += angle) {\n                let sx = x + p.cos(a) * radius;\n                let sy = y + p.sin(a) * radius;\n                p.vertex(sx, sy);\n            }\n            p.endShape(p.CLOSE);\n        };\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}